//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace KAUSTConnectForm.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class KCEntities : DbContext
    {
        public KCEntities()
            : base("name=KCEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Table_NewRequest> Table_NewRequest { get; set; }
    
        public virtual int sp_MngApproval(Nullable<int> iD, string status, string job, string approvedBy, string approvedOn)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var jobParameter = job != null ?
                new ObjectParameter("Job", job) :
                new ObjectParameter("Job", typeof(string));
    
            var approvedByParameter = approvedBy != null ?
                new ObjectParameter("ApprovedBy", approvedBy) :
                new ObjectParameter("ApprovedBy", typeof(string));
    
            var approvedOnParameter = approvedOn != null ?
                new ObjectParameter("ApprovedOn", approvedOn) :
                new ObjectParameter("ApprovedOn", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_MngApproval", iDParameter, statusParameter, jobParameter, approvedByParameter, approvedOnParameter);
        }
    
        public virtual int sp_MngRejection(Nullable<int> iD, string status, string approvedBy, string approvedOn, string comments)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var approvedByParameter = approvedBy != null ?
                new ObjectParameter("ApprovedBy", approvedBy) :
                new ObjectParameter("ApprovedBy", typeof(string));
    
            var approvedOnParameter = approvedOn != null ?
                new ObjectParameter("ApprovedOn", approvedOn) :
                new ObjectParameter("ApprovedOn", typeof(string));
    
            var commentsParameter = comments != null ?
                new ObjectParameter("Comments", comments) :
                new ObjectParameter("Comments", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_MngRejection", iDParameter, statusParameter, approvedByParameter, approvedOnParameter, commentsParameter);
        }
    
        public virtual int sp_MsgApproval(Nullable<int> iD, string msgTeamApprovedBy, string msgTeamApprovedOn, string status)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var msgTeamApprovedByParameter = msgTeamApprovedBy != null ?
                new ObjectParameter("MsgTeamApprovedBy", msgTeamApprovedBy) :
                new ObjectParameter("MsgTeamApprovedBy", typeof(string));
    
            var msgTeamApprovedOnParameter = msgTeamApprovedOn != null ?
                new ObjectParameter("MsgTeamApprovedOn", msgTeamApprovedOn) :
                new ObjectParameter("MsgTeamApprovedOn", typeof(string));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_MsgApproval", iDParameter, msgTeamApprovedByParameter, msgTeamApprovedOnParameter, statusParameter);
        }
    
        public virtual int sp_MsgRejection(Nullable<int> iD, string msgTeamApprovedBy, string msgTeamApprovedOn, string status, string comments)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var msgTeamApprovedByParameter = msgTeamApprovedBy != null ?
                new ObjectParameter("MsgTeamApprovedBy", msgTeamApprovedBy) :
                new ObjectParameter("MsgTeamApprovedBy", typeof(string));
    
            var msgTeamApprovedOnParameter = msgTeamApprovedOn != null ?
                new ObjectParameter("MsgTeamApprovedOn", msgTeamApprovedOn) :
                new ObjectParameter("MsgTeamApprovedOn", typeof(string));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var commentsParameter = comments != null ?
                new ObjectParameter("Comments", comments) :
                new ObjectParameter("Comments", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_MsgRejection", iDParameter, msgTeamApprovedByParameter, msgTeamApprovedOnParameter, statusParameter, commentsParameter);
        }
    
        public virtual int sp_CreateExistingID(Nullable<int> iD, string existingUsername, string firstName, string middleName, string lastName, Nullable<int> kaustID, string job, string vendorName, string newEmail, string expiryDate)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var existingUsernameParameter = existingUsername != null ?
                new ObjectParameter("ExistingUsername", existingUsername) :
                new ObjectParameter("ExistingUsername", typeof(string));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var middleNameParameter = middleName != null ?
                new ObjectParameter("MiddleName", middleName) :
                new ObjectParameter("MiddleName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var kaustIDParameter = kaustID.HasValue ?
                new ObjectParameter("kaustID", kaustID) :
                new ObjectParameter("kaustID", typeof(int));
    
            var jobParameter = job != null ?
                new ObjectParameter("Job", job) :
                new ObjectParameter("Job", typeof(string));
    
            var vendorNameParameter = vendorName != null ?
                new ObjectParameter("VendorName", vendorName) :
                new ObjectParameter("VendorName", typeof(string));
    
            var newEmailParameter = newEmail != null ?
                new ObjectParameter("NewEmail", newEmail) :
                new ObjectParameter("NewEmail", typeof(string));
    
            var expiryDateParameter = expiryDate != null ?
                new ObjectParameter("ExpiryDate", expiryDate) :
                new ObjectParameter("ExpiryDate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_CreateExistingID", iDParameter, existingUsernameParameter, firstNameParameter, middleNameParameter, lastNameParameter, kaustIDParameter, jobParameter, vendorNameParameter, newEmailParameter, expiryDateParameter);
        }
    }
}
